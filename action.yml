name: "branch-deploy"
description: "Enabling Branch Deployments through IssueOps with GitHub Actions"
author: "Grant Birkinbine"
branding:
  icon: 'git-branch'
  color: 'gray-dark'
inputs:
  github_token:
    description: The GitHub token used to create an authenticated client - Provided for you by default!
    default: ${{ github.token }}
    required: true
  status:
    description: The status of the GitHub Actions - For use in the post run workflow - Provided for you by default!
    default: ${{ job.status }}
    required: true
  environment:
    description: 'The name of the environment to deploy to. Example, "production"'
    required: false
    default: "production"
  reaction:
    description: 'If set, the specified emoji "reaction" is put on the comment to indicate that the trigger was detected. For example, "rocket" or "eyes"'
    required: false
    default: "eyes"
  trigger:
    description: 'The string to look for in comments as an IssueOps trigger. Example: ".deploy"'
    required: false
    default: ".deploy"
  noop_trigger:
    description: 'The string to look for in comments as an IssueOps noop trigger. Example: "noop"'
    required: false
    default: "noop"
  lock_trigger:
    description: 'The string to look for in comments as an IssueOps lock trigger. Used for locking branch deployments on a specific branch. Example: "lock"'
    required: false
    default: ".lock"
  unlock_trigger:
    description: 'The string to look for in comments as an IssueOps unlock trigger. Used for unlocking branch deployments. Example: "unlock"'
    required: false
    default: ".unlock"
  lock_info_alias:
    description: 'An alias or shortcut to get details about the current lock (if it exists) Example: ".info"'
    required: false
    default: ".wcid"
  stable_branch:
    description: 'The name of a stable branch to deploy to (rollbacks). Example: "main"'
    required: false
    default: "main"
  prefix_only:
    description: 'If "false", the trigger can match anywhere in the comment'
    required: false
    default: "true"
  update_branch:
    description: 'Determine how you want this Action to handle "out-of-date" branches. Available options: "disabled", "warn", "force". "disabled" means that the Action will not care if a branch is out-of-date. "warn" means that the Action will warn the user that a branch is out-of-date and exit without deploying. "force" means that the Action will force update the branch. Note: The "force" option is not recommended due to Actions not being able to re-run CI on commits originating from Actions itself'
    required: false
    default: "warn"
  required_contexts:
    description: 'Manually enforce commit status checks before a deployment can continue. Only use this option if you wish to manually override the settings you have configured for your branch protection settings for your GitHub repository. Default is "false - Example value: "context1,context2,context3" - In most cases you will not need to touch this option'
    required: false
    default: "false"
  allow_forks:
    description: 'Allow branch deployments to run on repository forks. If you want to harden your workflows, this option can be set to false. Default is "true"'
    required: false
    default: "true"
outputs:
  triggered:
    description: 'The string "true" if the trigger was found, otherwise the string "false"'
  comment_body:
    description: The comment body
  noop:
    description: 'The string "true" if the noop trigger was found, otherwise the string "false" - Use this to conditionally control whether your deployment runs as a noop or not'
  ref:
    description: The ref (branch or sha) to use with deployment
  comment_id:
    description: The comment id which triggered this deployment
  type:
    description: "The type of trigger that was detected (examples: deploy, lock, unlock)"
  continue:
    description: 'The string "true" if the deployment should continue, otherwise empty - Use this to conditionally control if your deployment should proceed or not'
  fork:
    description: 'The string "true" if the pull request is a fork, otherwise "false"'
  fork_ref:
    description: 'The true ref of the fork'
  fork_label:
    description: 'The API label field returned for the fork'
  fork_checkout:
    description: 'The console command presented in the GitHub UI to checkout a given fork locally'
runs:
  using: "node16"
  main: "dist/index.js"
  post: "dist/index.js"
